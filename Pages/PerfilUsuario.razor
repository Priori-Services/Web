@page "/perfil-usuario"
@using PRIORI_SERVICES_WEB.Handler
@using System.Net.Http.Headers
@inject IToastService Toast
@inject IAsyncService AsyncService
@inject IJSRuntime JSInterop
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject Blazored.LocalStorage.ISyncLocalStorageService SyncLocalStorage
@inject NavigationManager NavigationManager

<style>
    html,
    body {
    @(BackgroundGradients.BackgroundPrincipal);
    }
</style>

<NavMenu nav_classes="sticky-top" />

<div class="d-flex flex-row flex-wrap flex-lg-nowrap text-center">
    @if (clienteuser == null)
    {
        <div class="container d-flex flex-row">
            <div class="container">&ensp;</div>
            <div class="container-fluid">
                <button class="btn btn-light m-5" @onclick="@(() => Console.WriteLine(clienteuser!.ToString()))">
                    clique aqui para prosseguir
                </button>
            </div>
            <div class="container">&ensp;</div>
        </div>
    }
    else
    {
        <div class="container-fluid d-flex flex-column">
            <section style="background-color: #eee;" class="container-fluid bg-transparent d-flex flex-column">
                <div class="container py-5">
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="card mb-4">
                                <div class="card-body text-center">
                                    <i class="bi bi-person-circle text-dark" style="font-size: 6rem;"></i>
                                    <h5 class="mb-2">@(clienteuser.nome)</h5>
                                    <h5 class="mb-2">Cliente desde
                                        @($"{clienteuser.data_adesao.Day}/{clienteuser.data_adesao.Month}/{clienteuser.data_adesao.Year}")
                                    </h5>
                                    <h5 class="mb-4">Seu saldo é de @saldouser</h5>
                                    <div class="d-flex flex-column justify-content-center">
                                        <a href="/investimentos-efetuados" class="my-1 mx-2 btn btn-outline-primary">Meus
                                            Investimentos</a>
                                        <button
                                        @onclick="@(() => Modal_Saldo.Show<InsercaoDeSaldo>("Inserção de saldo"))"
                                            type="button" class="my-1 mx-4 btn btn-outline-primary">Inserir saldo</button>
                                        <button
                                        @onclick="@(() => Modal_Alteracao.Show<AlteracaoDeDados>("Alteração de Dados"))"
                                            type="button" class="my-1 mx-4 btn btn-outline-primary">Alterar dados</button>
                                        <button type="button" @onclick="@(() => AsyncService.RunTaskAsSync(UserSair))"
                                            class="my-1 mx-5 btn btn-outline-danger">Sair</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-8">
                            <div class="card mb-4">
                                <div class="card-body text-dark">
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <p class="mb-0">Nome Completo</p>
                                        </div>
                                        <div class="col-sm-9">
                                            <p class="mb-0">@(clienteuser.nome)</p>
                                        </div>
                                    </div>
                                    <hr>
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <p class="mb-0">CPF</p>
                                        </div>
                                        <div class="col-sm-9">
                                            <p class="mb-0">@(clienteuser.cpf)</p>
                                        </div>
                                    </div>
                                    <hr>
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <p class="mb-0">Email</p>
                                        </div>
                                        <div class="col-sm-9">
                                            <p class="mb-0">@(clienteuser.email)</p>
                                        </div>
                                    </div>
                                    <hr>
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <p class="mb-0">Data de Nascimento</p>
                                        </div>
                                        <div class="col-sm-9">
                                            <p class="text-muted mb-0">@(clienteuser.dataNascimento)</p>
                                        </div>
                                    </div>
                                    <hr>
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <p class="mb-0">Endereço</p>
                                        </div>
                                        <div class="col-sm-9">
                                            <p class="mb-0">@(clienteuser.endereco)</p>
                                        </div>
                                    </div>
                                    <hr>
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <p class="mb-0">Data de Adesão</p>
                                        </div>
                                        <div class="col-sm-9">
                                            <p class="text-muted mb-0">
                                                @($"{clienteuser.data_adesao.Day}/{clienteuser.data_adesao.Month}/{clienteuser.data_adesao.Year}")
                                            </p>
                                        </div>
                                    </div>
                                    <hr>
                                    <div class="row">
                                        <div class="col-sm-3">
                                            <p class="mb-0">Sua Pontuação</p>
                                        </div>
                                        <div class="col-sm-9">
                                            <p class="text-muted mb-0">@(clienteuser.pontuacao) pontos</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    }
</div>
<Footer></Footer>

@code {
    private Cliente? clienteuser { get; set; }
    private string saldouser { get; set; } = String.Empty;
    [CascadingParameter]
    public IModalService Modal_Saldo { get; set; } = default!;
    [CascadingParameter]
    public IModalService Modal_Alteracao { get; set; } = default!;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
            return;


        string? user_id = (await LocalStorage.GetItemAsStringAsync(LocalStorageKeys.user_id.ToString()));
        string? app_token = (await LocalStorage.GetItemAsStringAsync(LocalStorageKeys.app_token.ToString()));

        if (app_token == String.Empty || app_token == null || app_token == "")
            NavigationManager.NavigateTo("/");

        Toast.ShowInfo("Carregando...");

        APIHandler.static_client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", app_token);

        clienteuser = await
        APIHandler.FetchAbstractJsonObjectAsync<Cliente?>($"/Auth/Cliente/Info/{user_id}");

        saldouser = (await APIHandler.FetchOrFallbackAsync<decimal>($"/CarteiraInvestimento/saldo/{user_id}", 0)).ToString();

        APIHandler.static_client.DefaultRequestHeaders.Authorization = null;

        Console.WriteLine(clienteuser!.id_cliente);

        Toast.ShowSuccess("Carregamento finalizado!");
    }

    private async Task UserSair()
    {
        await LocalStorage.SetItemAsStringAsync(LocalStorageKeys.app_token.ToString(), "");
        await LocalStorage.SetItemAsStringAsync(LocalStorageKeys.user_id.ToString(), "");
        NavigationManager.NavigateTo("/");
    }
}
