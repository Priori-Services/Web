@page "/simulador"

@using PRIORI_SERVICES_WEB.Data.Model;
@using PRIORI_SERVICES_WEB.Handler;
@inject NavigationManager NavigationManager

<style>
    html,
    body {
        background-image: linear-gradient(75deg, rgb(211, 35, 218), rgb(114, 0, 167));
    }
</style>

<NavMenu nav_classes="sticky-top" />

<div class="d-flex flex-row align-items-center mt-">
    <div class="container-fluid">&ensp;</div>
    <div class="d-flex flex-row container-fluid text-center bg-white rounded-4 p-2 mt-4"
        style="width: fit-content; text-align: center;">

        <div class="bg-success mx-3 p-2 mt-2  rounded-4 my-2"></div>
        <p class="fonte-titulo fs-7 text-dark mt-3" style="margin-right: 1rem;">Baixo risco</p>

        <div class="bg-warning mx-3 p-2 mt-2  rounded-4 my-2"></div>
        <p class="fonte-titulo fs-7 text-dark mt-3" style="margin-right: 1rem;">MÃ©dio risco</p>

        <div class="bg-danger mx-3 p-2 mt-2  rounded-4 my-2"></div>
        <p class="fonte-titulo fs-7 text-dark mt-3" style="margin-right: 1rem;">Alto risco</p>

    </div>
    <div class="container-fluid">&ensp;</div>
</div>


<div class="my-3 d-flex flex-row flex-wrap text-center justify-content-center align-items-center">
    @foreach (Investimento investimento in invDisponiveis)
    {
        <div class="card p-2 m-5 bg-white text-dark">
            <div class="card-header bg-white d-flex flex-row ">
                @switch (investimento.id_riscoInvestimento)
                {
                    case 1:
                        <div class="bg-success rounded-4">
                            &ensp;
                        </div>
                        break;
                    case 2:
                        <div class="bg-warning rounded-4">
                            &ensp;
                        </div>
                        break;
                    case 3:
                        <div class="bg-danger rounded-4">
                            &ensp;
                        </div>
                        break;
                }

                <div class="bd-highlight">
                    <h4 class="p-1 mx-2" style="text-align: center;">@investimento.nome</h4>
                </div>
            </div>
            <div class="card-body">

                <ul class="list-group" style="list-style-type: none;">
                    <li class="list-group-item">Investimento Minimo: R$ @investimento.valor_minimo</li>
                    <li class="list-group-item">Vencimento:
                        @($"{investimento.vencimento.Day}/{investimento.vencimento.Month}/{investimento.vencimento.Year}")
                    </li>
                    <li class="list-group-item">Rentabilidade anual: @investimento.rentabilidade_variavel</li>
                    <br>
                    <button class="btn btn-outline-success"
                    @onclick="@(() => ModalSimulacao(investimento.id_investimento))">Simule</button>
                    <button class="btn btn-outline-primary mt-2">Contrate</button>
                </ul>
            </div>
        </div>
    }
</div>

<Footer />


@code {
    public Investimento[] invDisponiveis = new Investimento[0];

    [CascadingParameter]
    public IModalService Modal_Simulacao { get; set; } = default!;

    public async Task ModalSimulacao(int id_investimento)
    {
        SimulacaoID.id_selecionado = id_investimento;
        var moviesModal = Modal_Simulacao.Show<PosSimulacao>("My Movies");
        var result = await moviesModal.Result;

        if (result.Cancelled)
        {
            Console.WriteLine("Modal was cancelled");
        }
        else if (result.Confirmed)
        {
            Console.WriteLine("Modal was closed");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        invDisponiveis = await APIHandler.FetchOrFallbackAsync<Investimento[]>("/investimento", new Investimento[] {
new Investimento {
nome = "Falha ao encontrar investimentos."
}
});
    }
}
