@page "/blog"
@using PRIORI_SERVICES_WEB.Data.Model
@using PRIORI_SERVICES_WEB.Data.API

<NavMenu nav_classes="sticky-top" />

<nav class="container-fluid">
    <ul class="pagination">
        <button class="btn btn-primary mr-3" on:click={reset_categorias}> Limpar </button>
        @foreach (CategoriaBlog item in PageBlogCategoria)
        {
            <li class="page-item">
                <button class="page-link" aria-label="">@item.nome_categoria</button>
            </li>
        }
    </ul>
</nav>

<div class="my-5 container-sm text-center">
    <div class="row row-cols-3">
        @foreach (var item in PageBlogPosts)
        {
            <div class="card px-3 py-4 m-1 bg-light border rounded-4">
                <a href="/blog/post/@item.id_post" style="text-decoration: none;" class="text-dark">
                    <h3 class="fs-4">@item.titulo</h3>
                    <p class="fw-italic">@item.descricao</p>
                    <span class="badge bg-primary rounded-pill">@item.data_criacao</span>

                    <span
                        class="badge bg-primary rounded-pill">@GetCategoriaBlogFromID(@item.id_categoria).nome_categoria</span>
                </a>
            </div>
        }
    </div>
</div>

@code {
    public PostBlog[] PageBlogPosts = new PostBlog[0];

    public CategoriaBlog[] PageBlogCategoria = new CategoriaBlog[0];

    public CategoriaBlog GetCategoriaBlogFromID(int id)
    {
        foreach (var categoria in PageBlogCategoria)
        {
            if (categoria.id_categoria == id)
            {
                return categoria;
            }
        }
        return new CategoriaBlog
            {
                nome_categoria = "Falha ao encontrar categoria"
            };
    }

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Fuck");
        PageBlogPosts = await APIHandler.FetchOrFallbackAsync<PostBlog[]>(
        "api/Blog/Posts",
        new PostBlog[] { new PostBlog { titulo = "Falha ao encontrar posts" } }
        );

        PageBlogCategoria = await APIHandler.FetchOrFallbackAsync<CategoriaBlog[]>(
        "api/Blog/Categorias",
        new CategoriaBlog[]{
new CategoriaBlog {
id_categoria = 999,
nome_categoria = "Falha ao encontrar categoria"
}
        });
    }
}
