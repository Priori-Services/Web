@inject IToastService Toast
@using PRIORI_SERVICES_WEB.Handler
@inject IAsyncService AsyncService
@inject ILocalStorageService LocalStorage

<div class="text-dark d-flex flex-column">
    <h4>@(mensagem_modal)</h4>

    <div class="form-outline mb-4">
        <input type="text" @bind="saldoInput" @bind:event="oninput" class="form-control" required maxlength="10" />
    </div>

    <button @onclick="() => AsyncService.RunTaskAsSync(InserirSaldo)" class="btn btn-primary w-100">INSERIR
        SALDO</button>
</div>

@code {
    private string? saldoInput { get; set; }
    [Parameter] public string mensagem_modal {get;set;} = default!;
    [Parameter] public string? saldoUser { get; set; }
    [Parameter] public string? userid { get; set; }
    [Parameter] public string? app_token { get; set; }
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;
    private async Task InserirSaldo()
    {
        if (userid == null || saldoInput == null)
        {
            Toast.ShowError("Falha ao carregar dados do modal");
            await BlazoredModal.CloseAsync();
            return;
        }

        const string FAILURE_STATE = "Falha ao inserir saldo";

        HttpResponseMessage response;

        APIHandler.static_client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", app_token);

        try
        {
            response = await APIHandler.PutRequestAsync(
            new Dictionary<string, object> {
{"saldo_aplicado", Convert.ToDecimal(saldoInput) + Convert.ToDecimal(saldoUser)}
                }, $"/CarteiraInvestimento/saldo/{userid}"
            );
        }
        catch (Exception e)
        {
            Toast.ShowError(FAILURE_STATE);
            Console.WriteLine(e.ToString());
            return;
        }

        APIHandler.static_client.DefaultRequestHeaders.Authorization = null;

        if (!response.IsSuccessStatusCode)
        {
            Toast.ShowError(FAILURE_STATE);
            Console.WriteLine("{0},{1}",response.StatusCode, await response.Content.ReadAsStringAsync());
            return;
        }

        Toast.ShowSuccess("Saldo inserido com sucesso!");
        await BlazoredModal.CloseAsync();
    }
}
