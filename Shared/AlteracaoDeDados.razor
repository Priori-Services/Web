@using PRIORI_SERVICES_WEB.Handler;
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject IToastService Toast
@inject IAsyncService AsyncService

<div class="text-dark d-flex flex-column">
    <div class="form-outline mb-4">
        <label class="form-label fonteInfo" for="registrarEmail">E-mail</label>
        <input type="email" @bind="emailUsuario" @bind:event="oninput" class="form-control" required maxlength="40" />
    </div>

    <div class="form-outline mb-4">
        <label class="form-label fonteInfo" for="registrarEmail">Endereço</label>
        <input type="text" @bind="enderecoUsuario" @bind:event="oninput" class="form-control" required maxlength="60" />
    </div>

    <div class="form-outline mb-4">
        <label class="form-label fonteInfo" for="registerPassword">Senha</label>
        <input type="password" @bind="senhaUsuario" @bind:event="oninput" class="form-control" required />
    </div>

    <div class="form-outline mb-4">
        <label class="form-label fonteInfo" for="registerRepeatPassword">Confirme sua senha</label>
        <input type="password" @bind="senhaConfirm" @bind:event="oninput" class="form-control" required />
    </div>
    <p class="text-dark">Quer alterar outros dados? Entre em contato com a <i>Priori</i></p>
    <button @onclick="@(() => AsyncService.RunTaskAsSync(AlterarCliente))" class="btn btn-primary">Alterar
        Dados</button>
</div>


@code {
    @*TODO: Placeholders p todos os valores aqui*@
    private string enderecoUsuario { get; set; } = String.Empty;
    private string emailUsuario { get; set; } = String.Empty;
    private string senhaUsuario { get; set; } = String.Empty;
    private string senhaConfirm { get; set; } = String.Empty;

    private async Task AlterarCliente()
    {
        if (senhaUsuario != senhaConfirm)
        {
            Toast.ShowError("As senhas não são iguais");
            return;
        }
        const string FAILURE_STATE = "Falha ao alterar dados do usuário";
        HttpResponseMessage response;

        string app_token = (await LocalStorage.GetItemAsStringAsync(LocalStorageKeys.app_token.ToString()));
        string user_id = (await LocalStorage.GetItemAsStringAsync(LocalStorageKeys.user_id.ToString()));

        APIHandler.static_client.DefaultRequestHeaders.Authorization = new
        System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", app_token);

        try
        {
            response = await APIHandler.PutRequestAsync(
            new Dictionary<string, object> {
{"email", emailUsuario},
{"senha", senhaUsuario},
{"endereco", enderecoUsuario}
                }, $"/Auth/Cliente/{user_id}"
            );
        }
        catch (Exception e)
        {
            Toast.ShowError(FAILURE_STATE);
            Console.WriteLine(e);
            return;
        }

        APIHandler.static_client.DefaultRequestHeaders.Authorization = null;

        if (!response.IsSuccessStatusCode)
        {
            Toast.ShowError(FAILURE_STATE);
            Console.WriteLine(response.StatusCode);
            return;
        }

        Toast.ShowSuccess("Dados Alterados com Sucesso!");
    }
}
