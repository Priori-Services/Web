@inject ISMTPService SMTP
@inject IToastService Toast
@inject IAsyncService AsyncService
@using System.Net.Mail

<div class="card-body text-dark px-5">
    @if (!emailEnviado) {
        <h1>Enviando e-mail para confirmação</h1>
    } else {
        <p class="card-text fs-4 py-2">
                Digite o código de confirmação enviado ao email informado
            </p>
            <p class="card-text">
                Email inserido: @(emailUser)
            </p>
        <div class="form-outline">
            <input type="text" @bind="codigoInput" @bind:event="oninput" id="typeEmail" class="form-control my-3" />
        </div>
        <button @onclick="() => AsyncService.RunTaskAsSync(CodigoVerification)" class="btn btn-primary w-100">Verificar</button>
    }
</div>

@code {
    private bool emailEnviado {get;set;} = false;
    private bool codigoCorreto {get;set;} = false;
    private string codigoInput {get;set;} = String.Empty;
    private string codigoGen {get;set;} = String.Empty;
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;
    [Parameter] public string? emailUser {get;set;}
    [Parameter] public PrioriVerificationEmail? MensagemTFA {get;set;}

    private async Task CodigoVerification() {
        if (codigoGen != codigoInput) {
            Toast.ShowError("O código digitado não é válido");
            return;
        }

        await BlazoredModal.CloseAsync();
        Toast.ShowSuccess("E-mail confirmado com sucesso");
        return;
    }

    protected override async Task OnInitializedAsync()
    {
        const string FAILURE_STATE = "Falha ao enviar e-mail de confirmação.";

        if(emailUser == null) {
            Toast.ShowError(FAILURE_STATE);
            await BlazoredModal.CancelAsync();
            return;
        }

        codigoGen = MensagemTFA!.CodigoGen;
        try {
            SMTP.SendVerificationMailTo(MensagemTFA!,emailUser);
        } catch (SmtpException e) {
            Toast.ShowError(FAILURE_STATE);
            Console.WriteLine(e.ToString());
            await BlazoredModal.CancelAsync();
            return;
        }

        emailEnviado = true;
        Toast.ShowSuccess("E-mail enviado com sucesso");
    }
}
